diff --git a/bundle/nginx-1.21.4/src/core/ngx_log.c b/bundle/nginx-1.21.4/src/core/ngx_log.c
index eb7a989..cdf380c 100644
--- a/bundle/nginx-1.21.4/src/core/ngx_log.c
+++ b/bundle/nginx-1.21.4/src/core/ngx_log.c
@@ -8,6 +8,10 @@
 #include <ngx_config.h>
 #include <ngx_core.h>
 
+#if (NGX_HTTP_LUA_KONG)
+ngx_uint_t
+ngx_http_lua_kong_get_dynamic_log_level(ngx_uint_t current_log_level);
+#endif
 
 static char *ngx_error_log(ngx_conf_t *cf, ngx_command_t *cmd, void *conf);
 static char *ngx_log_set_levels(ngx_conf_t *cf, ngx_log_t *log);
@@ -171,8 +175,12 @@ ngx_log_error_core(ngx_uint_t level, ngx_log_t *log, ngx_err_t err,
     debug_connection = (log->log_level & NGX_LOG_DEBUG_CONNECTION) != 0;
 
     while (log) {
-
+#if (NGX_HTTP_LUA_KONG)
+        if (ngx_http_lua_kong_get_dynamic_log_level(log->log_level) < level &&
+            !debug_connection) {
+#else
         if (log->log_level < level && !debug_connection) {
+#endif
             break;
         }
 
@@ -230,7 +238,11 @@ ngx_log_error(ngx_uint_t level, ngx_log_t *log, ngx_err_t err,
 {
     va_list  args;
 
+#if (NGX_HTTP_LUA_KONG)
+    if (ngx_http_lua_kong_get_dynamic_log_level(log->log_level) >= level) {
+#else
     if (log->log_level >= level) {
+#endif
         va_start(args, fmt);
         ngx_log_error_core(level, log, err, fmt, args);
         va_end(args);
diff --git a/bundle/nginx-1.21.4/src/core/ngx_log.h b/bundle/nginx-1.21.4/src/core/ngx_log.h
index da81cf0..c9a46d5 100644
--- a/bundle/nginx-1.21.4/src/core/ngx_log.h
+++ b/bundle/nginx-1.21.4/src/core/ngx_log.h
@@ -72,6 +72,11 @@ struct ngx_log_s {
     ngx_log_t           *next;
 };
 
+#if (NGX_HTTP_LUA_KONG)
+ngx_uint_t
+ngx_http_lua_kong_get_dynamic_log_level(ngx_uint_t current_log_level);
+#endif
+
 
 #ifndef NGX_MAX_ERROR_STR
 #define NGX_MAX_ERROR_STR   4096
@@ -85,13 +90,13 @@ struct ngx_log_s {
 #define NGX_HAVE_VARIADIC_MACROS  1
 
 #define ngx_log_error(level, log, ...)                                        \
-    if ((log)->log_level >= level) ngx_log_error_core(level, log, __VA_ARGS__)
+    if (ngx_http_lua_kong_get_dynamic_log_level((log)->log_level) >= level) ngx_log_error_core(level, log, __VA_ARGS__)
 
 void ngx_log_error_core(ngx_uint_t level, ngx_log_t *log, ngx_err_t err,
     const char *fmt, ...);
 
 #define ngx_log_debug(level, log, ...)                                        \
-    if ((log)->log_level & level)                                             \
+    if (ngx_http_lua_kong_get_dynamic_log_level((log)->log_level) & level)    \
         ngx_log_error_core(NGX_LOG_DEBUG, log, __VA_ARGS__)
 
 /*********************************/
@@ -101,13 +106,12 @@ void ngx_log_error_core(ngx_uint_t level, ngx_log_t *log, ngx_err_t err,
 #define NGX_HAVE_VARIADIC_MACROS  1
 
 #define ngx_log_error(level, log, args...)                                    \
-    if ((log)->log_level >= level) ngx_log_error_core(level, log, args)
+    if (ngx_http_lua_kong_get_dynamic_log_level((log)->log_level) >= level) ngx_log_error_core(level, log, args)
 
 void ngx_log_error_core(ngx_uint_t level, ngx_log_t *log, ngx_err_t err,
     const char *fmt, ...);
 
 #define ngx_log_debug(level, log, args...)                                    \
-    if ((log)->log_level & level)                                             \
         ngx_log_error_core(NGX_LOG_DEBUG, log, args)
 
 /*********************************/
@@ -170,43 +174,43 @@ void ngx_cdecl ngx_log_debug_core(ngx_log_t *log, ngx_err_t err,
 #else /* no variadic macros */
 
 #define ngx_log_debug0(level, log, err, fmt)                                  \
-    if ((log)->log_level & level)                                             \
+    if (ngx_http_lua_kong_get_dynamic_log_level((log)->log_level) & level)    \
         ngx_log_debug_core(log, err, fmt)
 
 #define ngx_log_debug1(level, log, err, fmt, arg1)                            \
-    if ((log)->log_level & level)                                             \
+    if (ngx_http_lua_kong_get_dynamic_log_level((log)->log_level) & level)    \
         ngx_log_debug_core(log, err, fmt, arg1)
 
 #define ngx_log_debug2(level, log, err, fmt, arg1, arg2)                      \
-    if ((log)->log_level & level)                                             \
+    if (ngx_http_lua_kong_get_dynamic_log_level((log)->log_level) & level)    \
         ngx_log_debug_core(log, err, fmt, arg1, arg2)
 
 #define ngx_log_debug3(level, log, err, fmt, arg1, arg2, arg3)                \
-    if ((log)->log_level & level)                                             \
+    if (ngx_http_lua_kong_get_dynamic_log_level((log)->log_level) & level)    \
         ngx_log_debug_core(log, err, fmt, arg1, arg2, arg3)
 
 #define ngx_log_debug4(level, log, err, fmt, arg1, arg2, arg3, arg4)          \
-    if ((log)->log_level & level)                                             \
+    if (ngx_http_lua_kong_get_dynamic_log_level((log)->log_level) & level)    \
         ngx_log_debug_core(log, err, fmt, arg1, arg2, arg3, arg4)
 
 #define ngx_log_debug5(level, log, err, fmt, arg1, arg2, arg3, arg4, arg5)    \
-    if ((log)->log_level & level)                                             \
+    if (ngx_http_lua_kong_get_dynamic_log_level((log)->log_level) & level)    \
         ngx_log_debug_core(log, err, fmt, arg1, arg2, arg3, arg4, arg5)
 
 #define ngx_log_debug6(level, log, err, fmt,                                  \
                        arg1, arg2, arg3, arg4, arg5, arg6)                    \
-    if ((log)->log_level & level)                                             \
+    if (ngx_http_lua_kong_get_dynamic_log_level((log)->log_level) & level)    \
         ngx_log_debug_core(log, err, fmt, arg1, arg2, arg3, arg4, arg5, arg6)
 
 #define ngx_log_debug7(level, log, err, fmt,                                  \
                        arg1, arg2, arg3, arg4, arg5, arg6, arg7)              \
-    if ((log)->log_level & level)                                             \
+    if (ngx_http_lua_kong_get_dynamic_log_level((log)->log_level) & level)    \
         ngx_log_debug_core(log, err, fmt,                                     \
                        arg1, arg2, arg3, arg4, arg5, arg6, arg7)
 
 #define ngx_log_debug8(level, log, err, fmt,                                  \
                        arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)        \
-    if ((log)->log_level & level)                                             \
+    if (ngx_http_lua_kong_get_dynamic_log_level((log)->log_level) & level)    \
         ngx_log_debug_core(log, err, fmt,                                     \
                        arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
 
diff --git a/bundle/nginx-1.21.4/src/os/unix/ngx_process_cycle.c b/bundle/nginx-1.21.4/src/os/unix/ngx_process_cycle.c
index 5c2fa26..c5e789d 100644
--- a/bundle/nginx-1.21.4/src/os/unix/ngx_process_cycle.c
+++ b/bundle/nginx-1.21.4/src/os/unix/ngx_process_cycle.c
@@ -10,6 +10,10 @@
 #include <ngx_event.h>
 #include <ngx_channel.h>
 
+#if (NGX_HTTP_LUA_KONG)
+void
+ngx_http_lua_kong_log_set_ready_for_dynamic_log_level(ngx_int_t is_ready);
+#endif
 
 static void ngx_start_worker_processes(ngx_cycle_t *cycle, ngx_int_t n,
     ngx_int_t type);
@@ -303,6 +307,10 @@ ngx_single_process_cycle(ngx_cycle_t *cycle)
         }
     }
 
+#if (NGX_HTTP_LUA_KONG)
+    ngx_http_lua_kong_log_set_ready_for_dynamic_log_level(1);
+#endif
+
     for ( ;; ) {
         if (ngx_exiting) {
             if (ngx_event_no_timers_left() == NGX_OK) {
@@ -724,6 +732,10 @@ ngx_master_process_exit(ngx_cycle_t *cycle)
 {
     ngx_uint_t  i;
 
+#if (NGX_HTTP_LUA_KONG)
+    ngx_http_lua_kong_log_set_ready_for_dynamic_log_level(0);
+#endif
+
     ngx_delete_pidfile(cycle);
 
     ngx_log_error(NGX_LOG_NOTICE, cycle->log, 0, "exit");
@@ -779,6 +791,10 @@ ngx_worker_process_cycle(ngx_cycle_t *cycle, void *data)
 
     ngx_setproctitle("worker process");
 
+#if (NGX_HTTP_LUA_KONG)
+    ngx_http_lua_kong_log_set_ready_for_dynamic_log_level(1);
+#endif
+
     for ( ;; ) {
 
         if (ngx_exiting) {
@@ -1025,6 +1041,9 @@ ngx_worker_process_exit(ngx_cycle_t *cycle)
 {
     ngx_uint_t         i;
     ngx_connection_t  *c;
+#if (NGX_HTTP_LUA_KONG)
+    ngx_http_lua_kong_log_set_ready_for_dynamic_log_level(0);
+#endif
 
     for (i = 0; cycle->modules[i]; i++) {
         if (cycle->modules[i]->exit_process) {
@@ -1205,6 +1224,10 @@ ngx_cache_manager_process_cycle(ngx_cycle_t *cycle, void *data)
 
     ngx_add_timer(&ev, ctx->delay);
 
+#if (NGX_HTTP_LUA_KONG)
+    ngx_http_lua_kong_log_set_ready_for_dynamic_log_level(1);
+#endif
+
     for ( ;; ) {
 
         if (ngx_terminate || ngx_quit) {
@@ -1247,6 +1270,10 @@ ngx_privileged_agent_process_cycle(ngx_cycle_t *cycle, void *data)
 
     ngx_setproctitle(name);
 
+#if (NGX_HTTP_LUA_KONG)
+    ngx_http_lua_kong_log_set_ready_for_dynamic_log_level(1);
+#endif
+
     for ( ;; ) {
 
         if (ngx_terminate || ngx_quit) {